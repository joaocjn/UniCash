{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = {\n  button: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  animated: {\n    borderWidth: 0,\n    position: 'absolute'\n  }\n};\n\nvar SwitchSelector = function (_Component) {\n  _inherits(SwitchSelector, _Component);\n\n  var _super = _createSuper(SwitchSelector);\n\n  function SwitchSelector(props) {\n    var _this;\n\n    _classCallCheck(this, SwitchSelector);\n\n    _this = _super.call(this, props);\n\n    _this.responderEnd = function (evt, gestureState) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          options = _this$props.options;\n      var selected = _this.state.selected;\n      if (disabled) return;\n\n      var swipeDirection = _this.getSwipeDirection(gestureState);\n\n      if (swipeDirection === 'RIGHT' && selected < options.length - 1) {\n        _this.toggleItem(selected + 1);\n      } else if (swipeDirection === 'LEFT' && selected > 0) {\n        _this.toggleItem(selected - 1);\n      }\n    };\n\n    _this.shouldSetResponder = function (evt, gestureState) {\n      return evt.nativeEvent.touches.length === 1 && !(Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5);\n    };\n\n    _this.animate = function (value, last) {\n      var animationDuration = _this.props.animationDuration;\n\n      _this.animatedValue.setValue(last);\n\n      Animated.timing(_this.animatedValue, {\n        toValue: value,\n        duration: animationDuration,\n        easing: Easing.cubic,\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this.toggleItem = function (index) {\n      var callOnPress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var selected = _this.state.selected;\n      var _this$props2 = _this.props,\n          options = _this$props2.options,\n          returnObject = _this$props2.returnObject,\n          onPress = _this$props2.onPress;\n      if (options.length <= 1 || index === null || isNaN(index)) return;\n\n      _this.animate(I18nManager.isRTL ? -(index / options.length) : index / options.length, I18nManager.isRTL ? -(selected / options.length) : selected / options.length);\n\n      if (callOnPress && onPress) {\n        onPress(returnObject ? options[index] : options[index].value);\n      } else {\n        console.log('Call onPress with value: ', options[index].value);\n      }\n\n      _this.setState({\n        selected: index\n      });\n    };\n\n    var initial = props.initial,\n        _options = props.options;\n    _this.state = {\n      selected: initial\n    };\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: _this.shouldSetResponder,\n      onMoveShouldSetPanResponder: _this.shouldSetResponder,\n      onPanResponderRelease: _this.responderEnd,\n      onPanResponderTerminate: _this.responderEnd\n    });\n    _this.animatedValue = new Animated.Value(initial ? I18nManager.isRTL ? -(initial / _options.length) : initial / _options.length : 0);\n    return _this;\n  }\n\n  _createClass(SwitchSelector, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          value = _this$props3.value,\n          disableValueChangeOnPress = _this$props3.disableValueChangeOnPress;\n\n      if (prevProps.value !== value) {\n        this.toggleItem(value, !disableValueChangeOnPress);\n      }\n    }\n  }, {\n    key: \"getSwipeDirection\",\n    value: function getSwipeDirection(gestureState) {\n      var dx = gestureState.dx,\n          dy = gestureState.dy,\n          vx = gestureState.vx;\n\n      if (Math.abs(vx) > 0.1 && Math.abs(dy) < 80) {\n        return dx > 0 ? 'RIGHT' : 'LEFT';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getBgColor\",\n    value: function getBgColor() {\n      var selected = this.state.selected;\n      var _this$props4 = this.props,\n          options = _this$props4.options,\n          buttonColor = _this$props4.buttonColor;\n\n      if (selected === -1) {\n        return 'transparent';\n      }\n\n      return options[selected].activeColor || buttonColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          textStyle = _this$props5.textStyle,\n          selectedTextStyle = _this$props5.selectedTextStyle,\n          textContainerStyle = _this$props5.textContainerStyle,\n          selectedTextContainerStyle = _this$props5.selectedTextContainerStyle,\n          imageStyle = _this$props5.imageStyle,\n          textColor = _this$props5.textColor,\n          selectedColor = _this$props5.selectedColor,\n          fontSize = _this$props5.fontSize,\n          backgroundColor = _this$props5.backgroundColor,\n          borderColor = _this$props5.borderColor,\n          borderRadius = _this$props5.borderRadius,\n          borderWidth = _this$props5.borderWidth,\n          hasPadding = _this$props5.hasPadding,\n          valuePadding = _this$props5.valuePadding,\n          height = _this$props5.height,\n          bold = _this$props5.bold,\n          disabled = _this$props5.disabled,\n          buttonMargin = _this$props5.buttonMargin,\n          options = _this$props5.options,\n          accessibilityLabel = _this$props5.accessibilityLabel,\n          testID = _this$props5.testID;\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          sliderWidth = _this$state.sliderWidth;\n      var optionsMap = options.map(function (element, index) {\n        var isSelected = selected === index;\n        return _jsxs(TouchableOpacity, {\n          disabled: disabled || element.disabled,\n          style: [styles.button, isSelected ? selectedTextContainerStyle : textContainerStyle],\n          onPress: function onPress() {\n            return _this2.toggleItem(index);\n          },\n          accessibilityLabel: element.accessibilityLabel,\n          testID: element.testID,\n          children: [typeof element.customIcon === 'function' ? element.customIcon(isSelected) : element.customIcon, element.imageIcon && _jsx(Image, {\n            source: element.imageIcon,\n            style: [{\n              height: 30,\n              width: 30,\n              tintColor: isSelected ? selectedColor : textColor\n            }, imageStyle]\n          }), _jsx(Text, {\n            style: [{\n              fontSize: fontSize,\n              fontWeight: bold ? 'bold' : 'normal',\n              textAlign: 'center',\n              color: isSelected ? selectedColor : textColor,\n              backgroundColor: 'transparent'\n            }, isSelected ? selectedTextStyle : textStyle],\n            children: element.label\n          })]\n        }, index);\n      });\n      return _jsx(View, {\n        style: [{\n          flexDirection: 'row'\n        }, style],\n        accessibilityLabel: accessibilityLabel,\n        testID: testID,\n        children: _jsx(View, _objectSpread(_objectSpread({}, this.panResponder.panHandlers), {}, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(View, {\n            style: {\n              borderRadius: borderRadius,\n              backgroundColor: backgroundColor,\n              height: height + buttonMargin * 2\n            },\n            onLayout: function onLayout(event) {\n              var width = event.nativeEvent.layout.width;\n\n              _this2.setState({\n                sliderWidth: width - (hasPadding ? 2 : 0)\n              });\n            },\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                flexDirection: 'row',\n                borderColor: borderColor,\n                borderRadius: borderRadius,\n                borderWidth: hasPadding ? borderWidth : 0,\n                alignItems: 'center'\n              },\n              children: [!!sliderWidth && _jsx(Animated.View, {\n                style: [{\n                  height: hasPadding ? height - valuePadding * 2 - borderWidth * 2 : height,\n                  backgroundColor: this.getBgColor(),\n                  width: sliderWidth / options.length - ((hasPadding ? valuePadding : 0) + buttonMargin * 2),\n                  transform: [{\n                    translateX: this.animatedValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [hasPadding ? valuePadding : 0, sliderWidth - (hasPadding ? valuePadding : 0)]\n                    })\n                  }],\n                  borderRadius: borderRadius,\n                  margin: buttonMargin\n                }, styles.animated]\n              }), optionsMap]\n            })\n          })\n        }))\n      });\n    }\n  }]);\n\n  return SwitchSelector;\n}(Component);\n\nexport { SwitchSelector as default };\nSwitchSelector.defaultProps = {\n  style: {},\n  textStyle: {},\n  selectedTextStyle: {},\n  textContainerStyle: {},\n  selectedTextContainerStyle: {},\n  imageStyle: {},\n  options: [],\n  textColor: '#000000',\n  selectedColor: '#FFFFFF',\n  fontSize: 14,\n  backgroundColor: '#FFFFFF',\n  borderColor: '#C9C9C9',\n  borderRadius: 50,\n  borderWidth: 1,\n  hasPadding: false,\n  valuePadding: 1,\n  height: 40,\n  bold: false,\n  buttonMargin: 0,\n  buttonColor: '#BCD635',\n  returnObject: false,\n  animationDuration: 100,\n  disabled: false,\n  disableValueChangeOnPress: false,\n  initial: -1,\n  value: 1,\n  onPress: null,\n  accessibilityLabel: null,\n  testID: null\n};\nSwitchSelector.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  textContainerStyle: PropTypes.object,\n  selectedTextContainerStyle: PropTypes.object,\n  imageStyle: PropTypes.object,\n  options: PropTypes.array,\n  textColor: PropTypes.string,\n  selectedColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  borderWidth: PropTypes.number,\n  hasPadding: PropTypes.bool,\n  valuePadding: PropTypes.number,\n  height: PropTypes.number,\n  bold: PropTypes.bool,\n  buttonMargin: PropTypes.number,\n  buttonColor: PropTypes.string,\n  returnObject: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  disabled: PropTypes.bool,\n  disableValueChangeOnPress: PropTypes.bool,\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  onPress: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  testID: PropTypes.string\n};","map":{"version":3,"names":["React","Component","PropTypes","styles","button","flex","flexDirection","justifyContent","alignItems","animated","borderWidth","position","SwitchSelector","props","responderEnd","evt","gestureState","disabled","options","selected","state","swipeDirection","getSwipeDirection","length","toggleItem","shouldSetResponder","nativeEvent","touches","Math","abs","dx","dy","animate","value","last","animationDuration","animatedValue","setValue","Animated","timing","toValue","duration","easing","Easing","cubic","useNativeDriver","start","index","callOnPress","returnObject","onPress","isNaN","I18nManager","isRTL","console","log","setState","initial","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","onPanResponderTerminate","Value","prevProps","disableValueChangeOnPress","vx","buttonColor","activeColor","style","textStyle","selectedTextStyle","textContainerStyle","selectedTextContainerStyle","imageStyle","textColor","selectedColor","fontSize","backgroundColor","borderColor","borderRadius","hasPadding","valuePadding","height","bold","buttonMargin","accessibilityLabel","testID","sliderWidth","optionsMap","map","element","isSelected","customIcon","imageIcon","width","tintColor","fontWeight","textAlign","color","label","panHandlers","event","layout","getBgColor","transform","translateX","interpolate","inputRange","outputRange","margin","defaultProps","propTypes","oneOfType","object","array","string","number","bool","func"],"sources":["C:/Users/mathe/OneDrive/Área de Trabalho/Git/UniCash/App/node_modules/react-native-switch-selector/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Image,\n  PanResponder,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nconst styles = {\n  button: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  animated: {\n    borderWidth: 0,\n    position: 'absolute',\n  },\n};\n\nexport default class SwitchSelector extends Component {\n  constructor(props) {\n    super(props);\n    const { initial, options } = props;\n    this.state = {\n      selected: initial,\n    };\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this.shouldSetResponder,\n      onMoveShouldSetPanResponder: this.shouldSetResponder,\n      onPanResponderRelease: this.responderEnd,\n      onPanResponderTerminate: this.responderEnd,\n    });\n\n    this.animatedValue = new Animated.Value(\n      initial\n        ? I18nManager.isRTL\n          ? -(initial / options.length)\n          : initial / options.length\n        : 0,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value, disableValueChangeOnPress } = this.props;\n    if (prevProps.value !== value) {\n      this.toggleItem(value, !disableValueChangeOnPress);\n    }\n  }\n\n  getSwipeDirection(gestureState) {\n    const { dx, dy, vx } = gestureState;\n    // 0.1 velocity\n    if (Math.abs(vx) > 0.1 && Math.abs(dy) < 80) {\n      return dx > 0 ? 'RIGHT' : 'LEFT';\n    }\n    return null;\n  }\n\n  getBgColor() {\n    const { selected } = this.state;\n    const { options, buttonColor } = this.props;\n    if (selected === -1) {\n      return 'transparent';\n    }\n    return options[selected].activeColor || buttonColor;\n  }\n\n  responderEnd = (evt, gestureState) => {\n    const { disabled, options } = this.props;\n    const { selected } = this.state;\n\n    if (disabled) return;\n    const swipeDirection = this.getSwipeDirection(gestureState);\n    if (\n      swipeDirection === 'RIGHT'\n      && selected < options.length - 1\n    ) {\n      this.toggleItem(selected + 1);\n    } else if (swipeDirection === 'LEFT' && selected > 0) {\n      this.toggleItem(selected - 1);\n    }\n  };\n\n  shouldSetResponder = (evt, gestureState) => evt.nativeEvent.touches.length === 1\n    && !(Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5);\n\n  animate = (value, last) => {\n    const { animationDuration } = this.props;\n    this.animatedValue.setValue(last);\n    Animated.timing(this.animatedValue, {\n      toValue: value,\n      duration: animationDuration,\n      easing: Easing.cubic,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  toggleItem = (index, callOnPress = true) => {\n    const { selected } = this.state;\n    const { options, returnObject, onPress } = this.props;\n    if (options.length <= 1 || index === null || isNaN(index)) return;\n    this.animate(\n      I18nManager.isRTL ? -(index / options.length) : index / options.length,\n      I18nManager.isRTL\n        ? -(selected / options.length)\n        : selected / options.length,\n    );\n    if (callOnPress && onPress) {\n      onPress(returnObject ? options[index] : options[index].value);\n    } else {\n      console.log('Call onPress with value: ', options[index].value);\n    }\n    this.setState({ selected: index });\n  };\n\n  render() {\n    const {\n      style,\n      textStyle,\n      selectedTextStyle,\n      textContainerStyle,\n      selectedTextContainerStyle,\n      imageStyle,\n      textColor,\n      selectedColor,\n      fontSize,\n      backgroundColor,\n      borderColor,\n      borderRadius,\n      borderWidth,\n      hasPadding,\n      valuePadding,\n      height,\n      bold,\n      disabled,\n      buttonMargin,\n      options,\n      accessibilityLabel,\n      testID,\n    } = this.props;\n\n    const { selected, sliderWidth } = this.state;\n\n    const optionsMap = options.map((element, index) => {\n      const isSelected = selected === index;\n\n      return (\n        <TouchableOpacity\n          key={index}\n          disabled={disabled || element.disabled}\n          style={[\n            styles.button,\n            isSelected ? selectedTextContainerStyle : textContainerStyle,\n          ]}\n          onPress={() => this.toggleItem(index)}\n          accessibilityLabel={element.accessibilityLabel}\n          testID={element.testID}\n        >\n          {typeof element.customIcon === 'function'\n            ? element.customIcon(isSelected)\n            : element.customIcon}\n          {element.imageIcon && (\n            <Image\n              source={element.imageIcon}\n              style={[\n                {\n                  height: 30,\n                  width: 30,\n                  tintColor: isSelected ? selectedColor : textColor,\n                },\n                imageStyle,\n              ]}\n            />\n          )}\n          <Text\n            style={[\n              {\n                fontSize,\n                fontWeight: bold ? 'bold' : 'normal',\n                textAlign: 'center',\n                color: isSelected ? selectedColor : textColor,\n                backgroundColor: 'transparent',\n              },\n              isSelected ? selectedTextStyle : textStyle,\n            ]}\n          >\n            {element.label}\n          </Text>\n        </TouchableOpacity>\n      );\n    });\n\n    return (\n      <View\n        style={[{ flexDirection: 'row' }, style]}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      >\n        <View {...this.panResponder.panHandlers} style={{ flex: 1 }}>\n          <View\n            style={{\n              borderRadius,\n              backgroundColor,\n              height: height + buttonMargin * 2,\n            }}\n            onLayout={(event) => {\n              const { width } = event.nativeEvent.layout;\n              this.setState({\n                sliderWidth: width - (hasPadding ? 2 : 0),\n              });\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'row',\n                borderColor,\n                borderRadius,\n                borderWidth: hasPadding ? borderWidth : 0,\n                alignItems: 'center',\n              }}\n            >\n              {!!sliderWidth && (\n                <Animated.View\n                  style={[\n                    {\n                      height: hasPadding\n                        ? height - valuePadding * 2 - borderWidth * 2\n                        : height,\n                      backgroundColor: this.getBgColor(),\n                      width:\n                        sliderWidth / options.length\n                        - ((hasPadding ? valuePadding : 0) + buttonMargin * 2),\n                      transform: [\n                        {\n                          translateX: this.animatedValue.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [\n                              hasPadding ? valuePadding : 0,\n                              sliderWidth - (hasPadding ? valuePadding : 0),\n                            ],\n                          }),\n                        },\n                      ],\n                      borderRadius,\n                      margin: buttonMargin,\n                    },\n                    styles.animated,\n                  ]}\n                />\n              )}\n              {optionsMap}\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nSwitchSelector.defaultProps = {\n  style: {},\n  textStyle: {},\n  selectedTextStyle: {},\n  textContainerStyle: {},\n  selectedTextContainerStyle: {},\n  imageStyle: {},\n  options: [],\n  textColor: '#000000',\n  selectedColor: '#FFFFFF',\n  fontSize: 14,\n  backgroundColor: '#FFFFFF',\n  borderColor: '#C9C9C9',\n  borderRadius: 50,\n  borderWidth: 1,\n  hasPadding: false,\n  valuePadding: 1,\n  height: 40,\n  bold: false,\n  buttonMargin: 0,\n  buttonColor: '#BCD635',\n  returnObject: false,\n  animationDuration: 100,\n  disabled: false,\n  disableValueChangeOnPress: false,\n  initial: -1,\n  value: 1,\n  onPress: null,\n  accessibilityLabel: null,\n  testID: null,\n};\n\nSwitchSelector.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  textContainerStyle: PropTypes.object,\n  selectedTextContainerStyle: PropTypes.object,\n  imageStyle: PropTypes.object,\n  options: PropTypes.array,\n  textColor: PropTypes.string,\n  selectedColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  borderWidth: PropTypes.number,\n  hasPadding: PropTypes.bool,\n  valuePadding: PropTypes.number,\n  height: PropTypes.number,\n  bold: PropTypes.bool,\n  buttonMargin: PropTypes.number,\n  buttonColor: PropTypes.string,\n  returnObject: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  disabled: PropTypes.bool,\n  disableValueChangeOnPress: PropTypes.bool,\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  onPress: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  testID: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}